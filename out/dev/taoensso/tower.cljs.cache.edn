;; Analyzed by ClojureScript 1.7.122
{:use-macros nil, :excludes #{}, :name taoensso.tower, :imports nil, :requires {str clojure.string, clojure.string clojure.string, gstr goog.string, goog.string goog.string, goog.string.format goog.string.format, encore taoensso.encore, taoensso.encore taoensso.encore}, :uses nil, :defs {make-t {:name taoensso.tower/make-t, :file "out/dev/taoensso/tower.cljs", :line 758, :column 1, :end-line 758, :end-column 12, :meta {:file "/Users/bertranddechoux/Documents/sources/horizon-alpha/out/dev/taoensso/tower.cljs", :line 758, :column 6, :end-line 758, :end-column 12}}, make-t-uncached {:protocol-inline nil, :meta {:file "/Users/bertranddechoux/Documents/sources/horizon-alpha/out/dev/taoensso/tower.cljs", :line 676, :column 8, :end-line 676, :end-column 23, :private true, :arglists (quote ([tconfig]))}, :private true, :name taoensso.tower/make-t-uncached, :variadic false, :file "out/dev/taoensso/tower.cljs", :end-column 23, :method-params ([tconfig]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 676, :end-line 676, :max-fixed-arity 1, :fn-var true, :arglists (quote ([tconfig]))}, default-tfmt-str {:protocol-inline nil, :meta {:file "/Users/bertranddechoux/Documents/sources/horizon-alpha/out/dev/taoensso/tower.cljs", :line 461, :column 7, :end-line 461, :end-column 23, :arglists (quote ([_loc fmt & args])), :doc "Implementation detail. Based on `encore/format`.", :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(_loc fmt args)], :arglists ([_loc fmt & args]), :arglists-meta (nil)}}, :name taoensso.tower/default-tfmt-str, :variadic true, :file "out/dev/taoensso/tower.cljs", :end-column 23, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(_loc fmt args)], :arglists ([_loc fmt & args]), :arglists-meta (nil)}, :method-params [(_loc fmt args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 461, :end-line 461, :max-fixed-arity 2, :fn-var true, :arglists ([_loc fmt & args]), :doc "Implementation detail. Based on `encore/format`."}, kw-locale {:name taoensso.tower/kw-locale, :file "out/dev/taoensso/tower.cljs", :line 93, :column 1, :end-line 93, :end-column 15, :meta {:file "/Users/bertranddechoux/Documents/sources/horizon-alpha/out/dev/taoensso/tower.cljs", :line 93, :column 6, :end-line 93, :end-column 15}, :doc "\"en_gb-var1\" -> :en-gb-var1, etc."}, loc-tree {:name taoensso.tower/loc-tree, :file "out/dev/taoensso/tower.cljs", :line 422, :column 1, :end-line 422, :end-column 24, :private true, :meta {:file "/Users/bertranddechoux/Documents/sources/horizon-alpha/out/dev/taoensso/tower.cljs", :line 422, :column 16, :end-line 422, :end-column 24, :private true}, :doc "Returns intelligent, descending-preference vector of locale keys to search\n  for given locale or vector of descending-preference locales."}, make-t-cached {:name taoensso.tower/make-t-cached, :file "out/dev/taoensso/tower.cljs", :line 757, :column 1, :end-line 757, :end-column 29, :private true, :meta {:file "/Users/bertranddechoux/Documents/sources/horizon-alpha/out/dev/taoensso/tower.cljs", :line 757, :column 16, :end-line 757, :end-column 29, :private true}}, tscoped {:name taoensso.tower/tscoped, :file "out/dev/taoensso/tower.cljs", :line 420, :column 1, :end-line 420, :end-column 13, :meta {:file "/Users/bertranddechoux/Documents/sources/horizon-alpha/out/dev/taoensso/tower.cljs", :line 420, :column 6, :end-line 420, :end-column 13}}, *tscope* {:name taoensso.tower/*tscope*, :file "out/dev/taoensso/tower.cljs", :line 409, :column 1, :end-line 409, :end-column 24, :dynamic true, :meta {:file "/Users/bertranddechoux/Documents/sources/horizon-alpha/out/dev/taoensso/tower.cljs", :line 409, :column 16, :end-line 409, :end-column 24, :dynamic true}}, scoped {:name taoensso.tower/scoped, :file "out/dev/taoensso/tower.cljs", :line 415, :column 1, :end-line 415, :end-column 12, :meta {:file "/Users/bertranddechoux/Documents/sources/horizon-alpha/out/dev/taoensso/tower.cljs", :line 415, :column 6, :end-line 415, :end-column 12}, :doc "Merges scope keywords: (scope :a.b :c/d :e) => :a.b.c.d/e"}, fmt-str {:protocol-inline nil, :meta {:file "/Users/bertranddechoux/Documents/sources/horizon-alpha/out/dev/taoensso/tower.cljs", :line 280, :column 7, :end-line 280, :end-column 14, :arglists (quote ([_loc fmt & args])), :doc "Alpha - subject to change.", :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(_loc fmt args)], :arglists ([_loc fmt & args]), :arglists-meta (nil)}}, :name taoensso.tower/fmt-str, :variadic true, :file "out/dev/taoensso/tower.cljs", :end-column 14, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(_loc fmt args)], :arglists ([_loc fmt & args]), :arglists-meta (nil)}, :method-params [(_loc fmt args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 280, :end-line 280, :max-fixed-arity 2, :fn-var true, :arglists ([_loc fmt & args]), :doc "Alpha - subject to change."}, find1 {:protocol-inline nil, :meta {:file "/Users/bertranddechoux/Documents/sources/horizon-alpha/out/dev/taoensso/tower.cljs", :line 661, :column 8, :end-line 661, :end-column 13, :private true, :arglists (quote ([dict scope k ltree] [dict k ltree])), :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([dict scope k ltree] [dict k ltree]), :arglists ([dict scope k ltree] [dict k ltree]), :arglists-meta (nil nil)}}, :private true, :name taoensso.tower/find1, :variadic false, :file "out/dev/taoensso/tower.cljs", :end-column 13, :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([dict scope k ltree] [dict k ltree]), :arglists ([dict scope k ltree] [dict k ltree]), :arglists-meta (nil nil)}, :method-params ([dict scope k ltree] [dict k ltree]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 661, :end-line 661, :max-fixed-arity 4, :fn-var true, :arglists ([dict scope k ltree] [dict k ltree])}, nstr {:protocol-inline nil, :meta {:file "/Users/bertranddechoux/Documents/sources/horizon-alpha/out/dev/taoensso/tower.cljs", :line 660, :column 8, :end-line 660, :end-column 12, :private true, :arglists (quote ([x]))}, :private true, :name taoensso.tower/nstr, :variadic false, :file "out/dev/taoensso/tower.cljs", :end-column 12, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 660, :end-line 660, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}}, :require-macros {encore taoensso.encore, taoensso.encore taoensso.encore, tower-macros taoensso.tower, taoensso.tower taoensso.tower}, :cljs.analyzer/constants {:seen #{:compiled-dictionary :fmt-fn tconfig :ks :dictionary map? :cache-locales? :dev-mode? :scope :en :locales not :log-missing-translation-fn :nil :taoensso.tower/nil :missing :scope-fn :fallback-locale}, :order [:nil map? tconfig :compiled-dictionary :dev-mode? :fallback-locale :en :scope-fn :fmt-fn :log-missing-translation-fn :cache-locales? :dictionary not :taoensso.tower/nil :locales :scope :ks :missing]}, :doc "Simple internationalization (i18n) and localization (L10n) library for\n  Clojure/Script. Wraps standard Java/Script facilities when possible."}