;; Analyzed by ClojureScript 1.7.122
{:use-macros nil, :excludes #{}, :name horizon-alpha.field.grid, :imports nil, :requires {p horizon-alpha.field.pos, horizon-alpha.field.pos horizon-alpha.field.pos, horizon-alpha.utils horizon-alpha.utils}, :uses {pow2 horizon-alpha.utils}, :defs {square {:protocol-inline nil, :meta {:file "/Users/bertranddechoux/Documents/sources/horizon-alpha/src/horizon_alpha/field/grid.cljs", :line 6, :column 7, :end-line 6, :end-column 13, :arglists (quote ([length]))}, :name horizon-alpha.field.grid/square, :variadic false, :file "src/horizon_alpha/field/grid.cljs", :end-column 13, :method-params ([length]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 6, :end-line 6, :max-fixed-arity 1, :fn-var true, :arglists (quote ([length]))}, hex-tiling {:protocol-inline nil, :meta {:file "/Users/bertranddechoux/Documents/sources/horizon-alpha/src/horizon_alpha/field/grid.cljs", :line 11, :column 7, :end-line 11, :end-column 17, :arglists (quote ([x-scale]))}, :name horizon-alpha.field.grid/hex-tiling, :variadic false, :file "src/horizon_alpha/field/grid.cljs", :end-column 17, :method-params ([x-scale]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 11, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x-scale]))}, neighbors {:protocol-inline nil, :meta {:file "/Users/bertranddechoux/Documents/sources/horizon-alpha/src/horizon_alpha/field/grid.cljs", :line 19, :column 7, :end-line 19, :end-column 16, :arglists (quote ([{:keys [x y]}]))}, :name horizon-alpha.field.grid/neighbors, :variadic false, :file "src/horizon_alpha/field/grid.cljs", :end-column 16, :method-params ([p__9710]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [x y]}]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:y :x}, :order [:x :y]}, :doc "An ensemble of positions."}