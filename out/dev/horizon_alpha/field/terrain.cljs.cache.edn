;; Analyzed by ClojureScript 1.7.122
{:use-macros nil, :excludes #{}, :name horizon-alpha.field.terrain, :imports nil, :requires nil, :uses nil, :defs {transparent? {:protocol-inline nil, :meta {:file "/Users/bertranddechoux/Documents/sources/horizon-alpha/src/horizon_alpha/field/terrain.cljs", :line 4, :column 7, :end-line 4, :end-column 19, :arglists (quote ([t]))}, :name horizon-alpha.field.terrain/transparent?, :variadic false, :file "src/horizon_alpha/field/terrain.cljs", :end-column 19, :method-params ([t]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 4, :end-line 4, :max-fixed-arity 1, :fn-var true, :arglists (quote ([t]))}, walkable? {:protocol-inline nil, :meta {:file "/Users/bertranddechoux/Documents/sources/horizon-alpha/src/horizon_alpha/field/terrain.cljs", :line 8, :column 7, :end-line 8, :end-column 16, :arglists (quote ([t]))}, :name horizon-alpha.field.terrain/walkable?, :variadic false, :file "src/horizon_alpha/field/terrain.cljs", :end-column 16, :method-params ([t]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 8, :end-line 8, :max-fixed-arity 1, :fn-var true, :arglists (quote ([t]))}, rand-terrain {:protocol-inline nil, :meta {:file "/Users/bertranddechoux/Documents/sources/horizon-alpha/src/horizon_alpha/field/terrain.cljs", :line 12, :column 7, :end-line 12, :end-column 19, :arglists (quote ([]))}, :name horizon-alpha.field.terrain/rand-terrain, :variadic false, :file "src/horizon_alpha/field/terrain.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:lava :grass :rock}, :order [:lava :grass :rock]}, :doc "Ground behavior."}