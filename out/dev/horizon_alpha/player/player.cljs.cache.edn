;; Analyzed by ClojureScript 1.7.122
{:use-macros nil, :excludes #{}, :name horizon-alpha.player.player, :imports nil, :requires {s horizon-alpha.player.stat, horizon-alpha.player.stat horizon-alpha.player.stat, f horizon-alpha.field.field, horizon-alpha.field.field horizon-alpha.field.field, horizon-alpha.utils horizon-alpha.utils}, :uses {and? horizon-alpha.utils}, :defs {npc {:protocol-inline nil, :meta {:file "/Users/bertranddechoux/Documents/sources/horizon-alpha/src/horizon_alpha/player/player.cljs", :line 18, :column 7, :end-line 18, :end-column 10, :arglists (quote ([role name hp ap actions]))}, :name horizon-alpha.player.player/npc, :variadic false, :file "src/horizon_alpha/player/player.cljs", :end-column 10, :method-params ([role name hp ap actions]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 18, :end-line 18, :max-fixed-arity 5, :fn-var true, :arglists (quote ([role name hp ap actions]))}, previous-id {:name horizon-alpha.player.player/previous-id, :file "src/horizon_alpha/player/player.cljs", :line 7, :column 1, :end-line 7, :end-column 27, :private true, :meta {:file "/Users/bertranddechoux/Documents/sources/horizon-alpha/src/horizon_alpha/player/player.cljs", :line 7, :column 16, :end-line 7, :end-column 27, :private true}}, wounded? {:protocol-inline nil, :meta {:file "/Users/bertranddechoux/Documents/sources/horizon-alpha/src/horizon_alpha/player/player.cljs", :line 68, :column 7, :end-line 68, :end-column 15, :arglists (quote ([player]))}, :name horizon-alpha.player.player/wounded?, :variadic false, :file "src/horizon_alpha/player/player.cljs", :end-column 15, :method-params ([player]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 68, :end-line 68, :max-fixed-arity 1, :fn-var true, :arglists (quote ([player]))}, alive? {:protocol-inline nil, :meta {:file "/Users/bertranddechoux/Documents/sources/horizon-alpha/src/horizon_alpha/player/player.cljs", :line 64, :column 7, :end-line 64, :end-column 13, :arglists (quote ([player]))}, :name horizon-alpha.player.player/alive?, :variadic false, :file "src/horizon_alpha/player/player.cljs", :end-column 13, :method-params ([player]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 64, :end-line 64, :max-fixed-arity 1, :fn-var true, :arglists (quote ([player]))}, pcs {:protocol-inline nil, :meta {:file "/Users/bertranddechoux/Documents/sources/horizon-alpha/src/horizon_alpha/player/player.cljs", :line 80, :column 7, :end-line 80, :end-column 10, :arglists (quote ([players]))}, :name horizon-alpha.player.player/pcs, :variadic false, :file "src/horizon_alpha/player/player.cljs", :end-column 10, :method-params ([players]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 80, :end-line 80, :max-fixed-arity 1, :fn-var true, :arglists (quote ([players]))}, positions {:protocol-inline nil, :meta {:file "/Users/bertranddechoux/Documents/sources/horizon-alpha/src/horizon_alpha/player/player.cljs", :line 56, :column 7, :end-line 56, :end-column 16, :arglists (quote ([players]))}, :name horizon-alpha.player.player/positions, :variadic false, :file "src/horizon_alpha/player/player.cljs", :end-column 16, :method-params ([players]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 56, :end-line 56, :max-fixed-arity 1, :fn-var true, :arglists (quote ([players]))}, fiends {:protocol-inline nil, :meta {:file "/Users/bertranddechoux/Documents/sources/horizon-alpha/src/horizon_alpha/player/player.cljs", :line 76, :column 7, :end-line 76, :end-column 13, :arglists (quote ([players type]))}, :name horizon-alpha.player.player/fiends, :variadic false, :file "src/horizon_alpha/player/player.cljs", :end-column 13, :method-params ([players type]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 76, :end-line 76, :max-fixed-arity 2, :fn-var true, :arglists (quote ([players type]))}, wounded {:protocol-inline nil, :meta {:file "/Users/bertranddechoux/Documents/sources/horizon-alpha/src/horizon_alpha/player/player.cljs", :line 108, :column 7, :end-line 108, :end-column 14, :arglists (quote ([players]))}, :name horizon-alpha.player.player/wounded, :variadic false, :file "src/horizon_alpha/player/player.cljs", :end-column 14, :method-params ([players]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 108, :end-line 108, :max-fixed-arity 1, :fn-var true, :arglists (quote ([players]))}, ready {:protocol-inline nil, :meta {:file "/Users/bertranddechoux/Documents/sources/horizon-alpha/src/horizon_alpha/player/player.cljs", :line 88, :column 7, :end-line 88, :end-column 12, :arglists (quote ([players]))}, :name horizon-alpha.player.player/ready, :variadic false, :file "src/horizon_alpha/player/player.cljs", :end-column 12, :method-params ([players]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 88, :end-line 88, :max-fixed-arity 1, :fn-var true, :arglists (quote ([players]))}, done {:protocol-inline nil, :meta {:file "/Users/bertranddechoux/Documents/sources/horizon-alpha/src/horizon_alpha/player/player.cljs", :line 60, :column 7, :end-line 60, :end-column 11, :arglists (quote ([player]))}, :name horizon-alpha.player.player/done, :variadic false, :file "src/horizon_alpha/player/player.cljs", :end-column 11, :method-params ([player]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 60, :end-line 60, :max-fixed-arity 1, :fn-var true, :arglists (quote ([player]))}, dead {:protocol-inline nil, :meta {:file "/Users/bertranddechoux/Documents/sources/horizon-alpha/src/horizon_alpha/player/player.cljs", :line 104, :column 7, :end-line 104, :end-column 11, :arglists (quote ([players]))}, :name horizon-alpha.player.player/dead, :variadic false, :file "src/horizon_alpha/player/player.cljs", :end-column 11, :method-params ([players]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 104, :end-line 104, :max-fixed-arity 1, :fn-var true, :arglists (quote ([players]))}, next-id {:protocol-inline nil, :meta {:file "/Users/bertranddechoux/Documents/sources/horizon-alpha/src/horizon_alpha/player/player.cljs", :line 9, :column 8, :end-line 9, :end-column 15, :private true, :arglists (quote ([]))}, :private true, :name horizon-alpha.player.player/next-id, :variadic false, :file "src/horizon_alpha/player/player.cljs", :end-column 15, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 9, :end-line 9, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, npcs {:protocol-inline nil, :meta {:file "/Users/bertranddechoux/Documents/sources/horizon-alpha/src/horizon_alpha/player/player.cljs", :line 84, :column 7, :end-line 84, :end-column 11, :arglists (quote ([players]))}, :name horizon-alpha.player.player/npcs, :variadic false, :file "src/horizon_alpha/player/player.cljs", :end-column 11, :method-params ([players]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 84, :end-line 84, :max-fixed-arity 1, :fn-var true, :arglists (quote ([players]))}, init-pcs {:protocol-inline nil, :meta {:file "/Users/bertranddechoux/Documents/sources/horizon-alpha/src/horizon_alpha/player/player.cljs", :line 24, :column 7, :end-line 24, :end-column 15, :arglists (quote ([]))}, :name horizon-alpha.player.player/init-pcs, :variadic false, :file "src/horizon_alpha/player/player.cljs", :end-column 15, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 24, :end-line 24, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, alive {:protocol-inline nil, :meta {:file "/Users/bertranddechoux/Documents/sources/horizon-alpha/src/horizon_alpha/player/player.cljs", :line 100, :column 7, :end-line 100, :end-column 12, :arglists (quote ([players]))}, :name horizon-alpha.player.player/alive, :variadic false, :file "src/horizon_alpha/player/player.cljs", :end-column 12, :method-params ([players]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 100, :end-line 100, :max-fixed-arity 1, :fn-var true, :arglists (quote ([players]))}, pc {:protocol-inline nil, :meta {:file "/Users/bertranddechoux/Documents/sources/horizon-alpha/src/horizon_alpha/player/player.cljs", :line 12, :column 7, :end-line 12, :end-column 9, :arglists (quote ([id role name hp ap actions sp]))}, :name horizon-alpha.player.player/pc, :variadic false, :file "src/horizon_alpha/player/player.cljs", :end-column 9, :method-params ([id role name hp ap actions sp]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 7, :fn-var true, :arglists (quote ([id role name hp ap actions sp]))}, weakest-at {:protocol-inline nil, :meta {:file "/Users/bertranddechoux/Documents/sources/horizon-alpha/src/horizon_alpha/player/player.cljs", :line 92, :column 7, :end-line 92, :end-column 17, :arglists (quote ([players]))}, :name horizon-alpha.player.player/weakest-at, :variadic false, :file "src/horizon_alpha/player/player.cljs", :end-column 17, :method-params ([players]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 92, :end-line 92, :max-fixed-arity 1, :fn-var true, :arglists (quote ([players]))}, init-npcs {:protocol-inline nil, :meta {:file "/Users/bertranddechoux/Documents/sources/horizon-alpha/src/horizon_alpha/player/player.cljs", :line 40, :column 7, :end-line 40, :end-column 16, :arglists (quote ([]))}, :name horizon-alpha.player.player/init-npcs, :variadic false, :file "src/horizon_alpha/player/player.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 40, :end-line 40, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, friends {:protocol-inline nil, :meta {:file "/Users/bertranddechoux/Documents/sources/horizon-alpha/src/horizon_alpha/player/player.cljs", :line 72, :column 7, :end-line 72, :end-column 14, :arglists (quote ([players type]))}, :name horizon-alpha.player.player/friends, :variadic false, :file "src/horizon_alpha/player/player.cljs", :end-column 14, :method-params ([players type]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 72, :end-line 72, :max-fixed-arity 2, :fn-var true, :arglists (quote ([players type]))}, charge-aps {:protocol-inline nil, :meta {:file "/Users/bertranddechoux/Documents/sources/horizon-alpha/src/horizon_alpha/player/player.cljs", :line 96, :column 7, :end-line 96, :end-column 17, :arglists (quote ([players]))}, :name horizon-alpha.player.player/charge-aps, :variadic false, :file "src/horizon_alpha/player/player.cljs", :end-column 17, :method-params ([players]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 96, :end-line 96, :max-fixed-arity 1, :fn-var true, :arglists (quote ([players]))}, starting-players {:protocol-inline nil, :meta {:file "/Users/bertranddechoux/Documents/sources/horizon-alpha/src/horizon_alpha/player/player.cljs", :line 45, :column 7, :end-line 45, :end-column 23, :arglists (quote ([field]))}, :name horizon-alpha.player.player/starting-players, :variadic false, :file "src/horizon_alpha/player/player.cljs", :end-column 23, :method-params ([field]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 45, :end-line 45, :max-fixed-arity 1, :fn-var true, :arglists (quote ([field]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:role :artheon :block :boast :omegazell :sparadrap :sp :name :unleash :cast :loot :gaea :move :pos :type :pc :actions :charge :tank :id :current :ap :heal :npc :hp :beam :attack :dps}, :order [:id :type :role :name :hp :sp :ap :actions :pc :npc :artheon :tank :block :move :attack :omegazell :dps :boast :gaea :cast :unleash :loot :charge :sparadrap :heal :beam :pos :current]}, :doc "Player : a playable or not character."}