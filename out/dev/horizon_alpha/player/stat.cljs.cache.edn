;; Analyzed by ClojureScript 1.7.122
{:use-macros nil, :excludes #{}, :name horizon-alpha.player.stat, :imports nil, :requires nil, :uses nil, :defs {stat {:protocol-inline nil, :meta {:file "/Users/bertranddechoux/Documents/sources/horizon-alpha/src/horizon_alpha/player/stat.cljs", :line 4, :column 7, :end-line 4, :end-column 11, :arglists (quote ([max] [current max])), :doc "A player numeric statistic with a max value.", :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([max] [current max]), :arglists ([max] [current max]), :arglists-meta (nil nil)}}, :name horizon-alpha.player.stat/stat, :variadic false, :file "src/horizon_alpha/player/stat.cljs", :end-column 11, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([max] [current max]), :arglists ([max] [current max]), :arglists-meta (nil nil)}, :method-params ([max] [current max]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 4, :end-line 4, :max-fixed-arity 2, :fn-var true, :arglists ([max] [current max]), :doc "A player numeric statistic with a max value."}, charged? {:protocol-inline nil, :meta {:file "/Users/bertranddechoux/Documents/sources/horizon-alpha/src/horizon_alpha/player/stat.cljs", :line 13, :column 7, :end-line 13, :end-column 15, :arglists (quote ([{:keys [max current]}]))}, :name horizon-alpha.player.stat/charged?, :variadic false, :file "src/horizon_alpha/player/stat.cljs", :end-column 15, :method-params ([p__9724]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 13, :end-line 13, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [max current]}]))}, clear {:protocol-inline nil, :meta {:file "/Users/bertranddechoux/Documents/sources/horizon-alpha/src/horizon_alpha/player/stat.cljs", :line 17, :column 7, :end-line 17, :end-column 12, :arglists (quote ([{:keys [max]}]))}, :name horizon-alpha.player.stat/clear, :variadic false, :file "src/horizon_alpha/player/stat.cljs", :end-column 12, :method-params ([p__9729]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 17, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [max]}]))}, cleared? {:protocol-inline nil, :meta {:file "/Users/bertranddechoux/Documents/sources/horizon-alpha/src/horizon_alpha/player/stat.cljs", :line 21, :column 7, :end-line 21, :end-column 15, :arglists (quote ([{:keys [current]}]))}, :name horizon-alpha.player.stat/cleared?, :variadic false, :file "src/horizon_alpha/player/stat.cljs", :end-column 15, :method-params ([p__9734]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [current]}]))}, charge {:protocol-inline nil, :meta {:file "/Users/bertranddechoux/Documents/sources/horizon-alpha/src/horizon_alpha/player/stat.cljs", :line 25, :column 7, :end-line 25, :end-column 13, :arglists (quote ([s] [s n])), :doc "Increase a stat but without being over the max value.", :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([s] [s n]), :arglists ([s] [s n]), :arglists-meta (nil nil)}}, :name horizon-alpha.player.stat/charge, :variadic false, :file "src/horizon_alpha/player/stat.cljs", :end-column 13, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([s] [s n]), :arglists ([s] [s n]), :arglists-meta (nil nil)}, :method-params ([s] [s n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 25, :end-line 25, :max-fixed-arity 2, :fn-var true, :arglists ([s] [s n]), :doc "Increase a stat but without being over the max value."}, uncharge {:protocol-inline nil, :meta {:file "/Users/bertranddechoux/Documents/sources/horizon-alpha/src/horizon_alpha/player/stat.cljs", :line 34, :column 7, :end-line 34, :end-column 15, :arglists (quote ([s n]))}, :name horizon-alpha.player.stat/uncharge, :variadic false, :file "src/horizon_alpha/player/stat.cljs", :end-column 15, :method-params ([s n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 34, :end-line 34, :max-fixed-arity 2, :fn-var true, :arglists (quote ([s n]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{pos? <= :max :current max current}, :order [pos? max :current :max <= current]}, :doc "A player numeric value."}