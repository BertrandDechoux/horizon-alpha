;; Analyzed by ClojureScript 1.7.122
{:use-macros nil, :excludes #{}, :name horizon-alpha.view.logo, :imports nil, :requires {dom om.dom, om.dom om.dom, horizon-alpha.utils horizon-alpha.utils, p horizon-alpha.field.pos, horizon-alpha.field.pos horizon-alpha.field.pos}, :uses {to-js horizon-alpha.utils}, :defs {avatar {:protocol-inline nil, :meta {:file "/Users/bertranddechoux/Documents/sources/horizon-alpha/src/horizon_alpha/view/logo.cljs", :line 7, :column 7, :end-line 7, :end-column 13, :arglists (quote ([type role]))}, :name horizon-alpha.view.logo/avatar, :variadic false, :file "src/horizon_alpha/view/logo.cljs", :end-column 13, :method-params ([type role]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 2, :fn-var true, :arglists (quote ([type role]))}, player {:protocol-inline nil, :meta {:file "/Users/bertranddechoux/Documents/sources/horizon-alpha/src/horizon_alpha/view/logo.cljs", :line 15, :column 7, :end-line 15, :end-column 13, :arglists (quote ([pos player extra]))}, :name horizon-alpha.view.logo/player, :variadic false, :file "src/horizon_alpha/view/logo.cljs", :end-column 13, :method-params ([pos player extra]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 3, :fn-var true, :arglists (quote ([pos player extra]))}, cursor {:protocol-inline nil, :meta {:file "/Users/bertranddechoux/Documents/sources/horizon-alpha/src/horizon_alpha/view/logo.cljs", :line 25, :column 7, :end-line 25, :end-column 13, :arglists (quote ([action]))}, :name horizon-alpha.view.logo/cursor, :variadic false, :file "src/horizon_alpha/view/logo.cljs", :end-column 13, :method-params ([action]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 25, :end-line 25, :max-fixed-arity 1, :fn-var true, :arglists (quote ([action]))}, cursor-transform {:protocol-inline nil, :meta {:file "/Users/bertranddechoux/Documents/sources/horizon-alpha/src/horizon_alpha/view/logo.cljs", :line 37, :column 7, :end-line 37, :end-column 23, :arglists (quote ([{:keys [x y]} nvec action]))}, :name horizon-alpha.view.logo/cursor-transform, :variadic false, :file "src/horizon_alpha/view/logo.cljs", :end-column 23, :method-params ([p__15929 nvec action]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 37, :end-line 37, :max-fixed-arity 3, :fn-var true, :arglists (quote ([{:keys [x y]} nvec action]))}, target {:protocol-inline nil, :meta {:file "/Users/bertranddechoux/Documents/sources/horizon-alpha/src/horizon_alpha/view/logo.cljs", :line 43, :column 7, :end-line 43, :end-column 13, :arglists (quote ([pos from action extra]))}, :name horizon-alpha.view.logo/target, :variadic false, :file "src/horizon_alpha/view/logo.cljs", :end-column 13, :method-params ([pos from action extra]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 43, :end-line 43, :max-fixed-arity 4, :fn-var true, :arglists (quote ([pos from action extra]))}}, :require-macros {dom om.dom, om.dom om.dom}, :cljs.analyzer/constants {:seen #{:y :role :block :boast :transform :else :unleash :cast :loot :move :type :className :charge :tank :heal :d :x :beam :attack :dps}, :order [:heal :dps :tank :cast :else :x :y :type :role :d :className :loot :move :unleash :beam :attack :block :boast :charge :transform]}, :doc "Define the logo for every person on the playing field."}