;; Analyzed by ClojureScript 1.7.122
{:use-macros nil, :excludes #{}, :name horizon-alpha.view.player, :imports nil, :requires {dom om.dom, horizon-alpha.view.svg horizon-alpha.view.svg, om.dom om.dom, horizon-alpha.model.game horizon-alpha.model.game, logo horizon-alpha.view.logo, game horizon-alpha.model.game, horizon-alpha.player.player horizon-alpha.player.player, horizon-alpha.view.logo horizon-alpha.view.logo, horizon-alpha.utils horizon-alpha.utils, om.core om.core, om om.core, svg horizon-alpha.view.svg}, :uses {pcs horizon-alpha.player.player, npcs horizon-alpha.player.player, to-js horizon-alpha.utils}, :defs {->t_horizon_alpha$view$player16271 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([info-view app-state p__16269 owner vec__16270 _ player meta16272])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name horizon-alpha.view.player/->t_horizon_alpha$view$player16271, :variadic false, :file "src/horizon_alpha/view/player.cljs", :method-params ([info-view app-state p__16269 owner vec__16270 _ player meta16272]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 5, :factory :positional, :line 38, :max-fixed-arity 8, :fn-var true, :arglists (quote ([info-view app-state p__16269 owner vec__16270 _ player meta16272])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_horizon_alpha$view$player16289 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([target-view app-state interpolate cell-radius target owner meta16290])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name horizon-alpha.view.player/->t_horizon_alpha$view$player16289, :variadic false, :file "src/horizon_alpha/view/player.cljs", :method-params ([target-view app-state interpolate cell-radius target owner meta16290]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 5, :factory :positional, :line 61, :max-fixed-arity 7, :fn-var true, :arglists (quote ([target-view app-state interpolate cell-radius target owner meta16290])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, css-class {:protocol-inline nil, :meta {:file "/Users/bertranddechoux/Documents/sources/horizon-alpha/src/horizon_alpha/view/player.cljs", :line 29, :column 7, :end-line 29, :end-column 16, :arglists (quote ([player app-state]))}, :name horizon-alpha.view.player/css-class, :variadic false, :file "src/horizon_alpha/view/player.cljs", :end-column 16, :method-params ([player app-state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 29, :end-line 29, :max-fixed-arity 2, :fn-var true, :arglists (quote ([player app-state]))}, info-view {:protocol-inline nil, :meta {:file "/Users/bertranddechoux/Documents/sources/horizon-alpha/src/horizon_alpha/view/player.cljs", :line 35, :column 7, :end-line 35, :end-column 16, :arglists (quote ([app-state]))}, :name horizon-alpha.view.player/info-view, :variadic false, :file "src/horizon_alpha/view/player.cljs", :end-column 16, :method-params ([app-state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 35, :end-line 35, :max-fixed-arity 1, :fn-var true, :arglists (quote ([app-state]))}, focus-register {:protocol-inline nil, :meta {:file "/Users/bertranddechoux/Documents/sources/horizon-alpha/src/horizon_alpha/view/player.cljs", :line 24, :column 7, :end-line 24, :end-column 21, :arglists (quote ([pos app-state extra]))}, :name horizon-alpha.view.player/focus-register, :variadic false, :file "src/horizon_alpha/view/player.cljs", :end-column 21, :method-params ([pos app-state extra]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 24, :end-line 24, :max-fixed-arity 3, :fn-var true, :arglists (quote ([pos app-state extra]))}, focus! {:protocol-inline nil, :meta {:file "/Users/bertranddechoux/Documents/sources/horizon-alpha/src/horizon_alpha/view/player.cljs", :line 20, :column 7, :end-line 20, :end-column 13, :arglists (quote ([pos app-state]))}, :name horizon-alpha.view.player/focus!, :variadic false, :file "src/horizon_alpha/view/player.cljs", :end-column 13, :method-params ([pos app-state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 2, :fn-var true, :arglists (quote ([pos app-state]))}, cell-view {:protocol-inline nil, :meta {:file "/Users/bertranddechoux/Documents/sources/horizon-alpha/src/horizon_alpha/view/player.cljs", :line 46, :column 7, :end-line 46, :end-column 16, :arglists (quote ([app-state interpolate cell-radius]))}, :name horizon-alpha.view.player/cell-view, :variadic false, :file "src/horizon_alpha/view/player.cljs", :end-column 16, :method-params ([app-state interpolate cell-radius]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 46, :end-line 46, :max-fixed-arity 3, :fn-var true, :arglists (quote ([app-state interpolate cell-radius]))}, stat {:protocol-inline nil, :meta {:file "/Users/bertranddechoux/Documents/sources/horizon-alpha/src/horizon_alpha/view/player.cljs", :line 14, :column 7, :end-line 14, :end-column 11, :arglists (quote ([player stat-type]))}, :name horizon-alpha.view.player/stat, :variadic false, :file "src/horizon_alpha/view/player.cljs", :end-column 11, :method-params ([player stat-type]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 2, :fn-var true, :arglists (quote ([player stat-type]))}, ->t_horizon_alpha$view$player16284 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([target-view app-state interpolate cell-radius target owner meta16285])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name horizon-alpha.view.player/->t_horizon_alpha$view$player16284, :variadic false, :file "src/horizon_alpha/view/player.cljs", :method-params ([target-view app-state interpolate cell-radius target owner meta16285]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 5, :factory :positional, :line 61, :max-fixed-arity 7, :fn-var true, :arglists (quote ([target-view app-state interpolate cell-radius target owner meta16285])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_horizon_alpha$view$player16271 {:num-fields 8, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name horizon-alpha.view.player/t_horizon_alpha$view$player16271, :file "src/horizon_alpha/view/player.cljs", :type true, :anonymous true, :column 5, :line 38, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_horizon_alpha$view$player16281 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([cell-view app-state interpolate cell-radius p__16279 owner vec__16280 _ player meta16282])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name horizon-alpha.view.player/->t_horizon_alpha$view$player16281, :variadic false, :file "src/horizon_alpha/view/player.cljs", :method-params ([cell-view app-state interpolate cell-radius p__16279 owner vec__16280 _ player meta16282]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 5, :factory :positional, :line 49, :max-fixed-arity 10, :fn-var true, :arglists (quote ([cell-view app-state interpolate cell-radius p__16279 owner vec__16280 _ player meta16282])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_horizon_alpha$view$player16284 {:num-fields 7, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name horizon-alpha.view.player/t_horizon_alpha$view$player16284, :file "src/horizon_alpha/view/player.cljs", :type true, :anonymous true, :column 5, :line 61, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_horizon_alpha$view$player16276 {:num-fields 10, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name horizon-alpha.view.player/t_horizon_alpha$view$player16276, :file "src/horizon_alpha/view/player.cljs", :type true, :anonymous true, :column 5, :line 49, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, width {:protocol-inline nil, :meta {:file "/Users/bertranddechoux/Documents/sources/horizon-alpha/src/horizon_alpha/view/player.cljs", :line 10, :column 7, :end-line 10, :end-column 12, :arglists (quote ([{:keys [current max]}]))}, :name horizon-alpha.view.player/width, :variadic false, :file "src/horizon_alpha/view/player.cljs", :end-column 12, :method-params ([p__16258]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 10, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [current max]}]))}, t_horizon_alpha$view$player16266 {:num-fields 8, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name horizon-alpha.view.player/t_horizon_alpha$view$player16266, :file "src/horizon_alpha/view/player.cljs", :type true, :anonymous true, :column 5, :line 38, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, target-view {:protocol-inline nil, :meta {:file "/Users/bertranddechoux/Documents/sources/horizon-alpha/src/horizon_alpha/view/player.cljs", :line 58, :column 7, :end-line 58, :end-column 18, :arglists (quote ([app-state interpolate cell-radius]))}, :name horizon-alpha.view.player/target-view, :variadic false, :file "src/horizon_alpha/view/player.cljs", :end-column 18, :method-params ([app-state interpolate cell-radius]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 58, :end-line 58, :max-fixed-arity 3, :fn-var true, :arglists (quote ([app-state interpolate cell-radius]))}, ->t_horizon_alpha$view$player16276 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([cell-view app-state interpolate cell-radius p__16274 owner vec__16275 _ player meta16277])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name horizon-alpha.view.player/->t_horizon_alpha$view$player16276, :variadic false, :file "src/horizon_alpha/view/player.cljs", :method-params ([cell-view app-state interpolate cell-radius p__16274 owner vec__16275 _ player meta16277]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 5, :factory :positional, :line 49, :max-fixed-arity 10, :fn-var true, :arglists (quote ([cell-view app-state interpolate cell-radius p__16274 owner vec__16275 _ player meta16277])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_horizon_alpha$view$player16266 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([info-view app-state p__16264 owner vec__16265 _ player meta16267])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name horizon-alpha.view.player/->t_horizon_alpha$view$player16266, :variadic false, :file "src/horizon_alpha/view/player.cljs", :method-params ([info-view app-state p__16264 owner vec__16265 _ player meta16267]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 5, :factory :positional, :line 38, :max-fixed-arity 8, :fn-var true, :arglists (quote ([info-view app-state p__16264 owner vec__16265 _ player meta16267])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_horizon_alpha$view$player16281 {:num-fields 10, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name horizon-alpha.view.player/t_horizon_alpha$view$player16281, :file "src/horizon_alpha/view/player.cljs", :type true, :anonymous true, :column 5, :line 49, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_horizon_alpha$view$player16289 {:num-fields 7, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name horizon-alpha.view.player/t_horizon_alpha$view$player16289, :file "src/horizon_alpha/view/player.cljs", :type true, :anonymous true, :column 5, :line 61, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}}, :require-macros {om om.core, om.core om.core, dom om.dom, om.dom om.dom}, :cljs.analyzer/constants {:seen #{:y target info-view p__16264 cell-radius vec__16265 owner :sp :name cell-view meta16282 :pos :onMouseEnter :type _ :className p__16269 meta16290 :from :max :active interpolate :id :current meta16267 vec__16270 :onMouseLeave :ap :focus :action app-state vec__16275 :x target-view meta16277 :hp p__16279 quote :arglists p__16274 vec__16280 meta16272 :onClick meta16285 player}, :order [:current :max :focus :onMouseEnter :onMouseLeave :type :pos :id :active :className :x :y :name :hp :sp :ap info-view :arglists quote app-state p__16264 owner vec__16265 _ player meta16267 p__16269 vec__16270 meta16272 cell-view interpolate cell-radius p__16274 vec__16275 meta16277 p__16279 vec__16280 meta16282 :action :from :onClick target-view target meta16285 meta16290]}, :doc nil}