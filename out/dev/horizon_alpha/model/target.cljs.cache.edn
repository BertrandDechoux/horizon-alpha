;; Analyzed by ClojureScript 1.7.122
{:use-macros nil, :excludes #{}, :name horizon-alpha.model.target, :imports nil, :requires {p horizon-alpha.player.player, horizon-alpha.player.player horizon-alpha.player.player, s horizon-alpha.player.stat, horizon-alpha.player.stat horizon-alpha.player.stat, path horizon-alpha.model.path, horizon-alpha.model.path horizon-alpha.model.path}, :uses nil, :defs {attacks {:protocol-inline nil, :meta {:file "/Users/bertranddechoux/Documents/sources/horizon-alpha/src/horizon_alpha/model/target.cljs", :line 12, :column 7, :end-line 12, :end-column 14, :arglists (quote ([state player]))}, :name horizon-alpha.model.target/attacks, :variadic false, :file "src/horizon_alpha/model/target.cljs", :end-column 14, :method-params ([state player]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state player]))}, moves {:protocol-inline nil, :meta {:file "/Users/bertranddechoux/Documents/sources/horizon-alpha/src/horizon_alpha/model/target.cljs", :line 7, :column 7, :end-line 7, :end-column 12, :arglists (quote ([state player]))}, :name horizon-alpha.model.target/moves, :variadic false, :file "src/horizon_alpha/model/target.cljs", :end-column 12, :method-params ([state player]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state player]))}, boasts {:protocol-inline nil, :meta {:file "/Users/bertranddechoux/Documents/sources/horizon-alpha/src/horizon_alpha/model/target.cljs", :line 41, :column 7, :end-line 41, :end-column 13, :arglists (quote ([state player]))}, :name horizon-alpha.model.target/boasts, :variadic false, :file "src/horizon_alpha/model/target.cljs", :end-column 13, :method-params ([state player]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 41, :end-line 41, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state player]))}, heals {:protocol-inline nil, :meta {:file "/Users/bertranddechoux/Documents/sources/horizon-alpha/src/horizon_alpha/model/target.cljs", :line 17, :column 7, :end-line 17, :end-column 12, :arglists (quote ([state player]))}, :name horizon-alpha.model.target/heals, :variadic false, :file "src/horizon_alpha/model/target.cljs", :end-column 12, :method-params ([state player]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 17, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state player]))}, charges {:protocol-inline nil, :meta {:file "/Users/bertranddechoux/Documents/sources/horizon-alpha/src/horizon_alpha/model/target.cljs", :line 33, :column 7, :end-line 33, :end-column 14, :arglists (quote ([state player]))}, :name horizon-alpha.model.target/charges, :variadic false, :file "src/horizon_alpha/model/target.cljs", :end-column 14, :method-params ([state player]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state player]))}, pc-targets {:protocol-inline nil, :meta {:file "/Users/bertranddechoux/Documents/sources/horizon-alpha/src/horizon_alpha/model/target.cljs", :line 45, :column 7, :end-line 45, :end-column 17, :arglists (quote ([state]))}, :name horizon-alpha.model.target/pc-targets, :variadic false, :file "src/horizon_alpha/model/target.cljs", :end-column 17, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 45, :end-line 45, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, loots {:protocol-inline nil, :meta {:file "/Users/bertranddechoux/Documents/sources/horizon-alpha/src/horizon_alpha/model/target.cljs", :line 29, :column 7, :end-line 29, :end-column 12, :arglists (quote ([state player]))}, :name horizon-alpha.model.target/loots, :variadic false, :file "src/horizon_alpha/model/target.cljs", :end-column 12, :method-params ([state player]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 29, :end-line 29, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state player]))}, unleashs {:protocol-inline nil, :meta {:file "/Users/bertranddechoux/Documents/sources/horizon-alpha/src/horizon_alpha/model/target.cljs", :line 37, :column 7, :end-line 37, :end-column 15, :arglists (quote ([state player]))}, :name horizon-alpha.model.target/unleashs, :variadic false, :file "src/horizon_alpha/model/target.cljs", :end-column 15, :method-params ([state player]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 37, :end-line 37, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state player]))}, beams {:protocol-inline nil, :meta {:file "/Users/bertranddechoux/Documents/sources/horizon-alpha/src/horizon_alpha/model/target.cljs", :line 21, :column 7, :end-line 21, :end-column 12, :arglists (quote ([state player]))}, :name horizon-alpha.model.target/beams, :variadic false, :file "src/horizon_alpha/model/target.cljs", :end-column 12, :method-params ([state player]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state player]))}, blocks {:protocol-inline nil, :meta {:file "/Users/bertranddechoux/Documents/sources/horizon-alpha/src/horizon_alpha/model/target.cljs", :line 25, :column 7, :end-line 25, :end-column 13, :arglists (quote ([state player]))}, :name horizon-alpha.model.target/blocks, :variadic false, :file "src/horizon_alpha/model/target.cljs", :end-column 13, :method-params ([state player]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 25, :end-line 25, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state player]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:block :boast :sp :unleash :loot :move :pos :loots :targets :actions :charge :occupied :from :active :players :heal :action :beam :attack}, :order [:pos :action :from :move :attack :heal :actions :sp :occupied :beam :block :loot :loots :charge :unleash :players :boast :active :targets]}, :doc "Possible options for any pcs."}