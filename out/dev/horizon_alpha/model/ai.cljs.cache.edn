;; Analyzed by ClojureScript 1.7.122
{:use-macros nil, :excludes #{}, :name horizon-alpha.model.ai, :imports nil, :requires {attack horizon-alpha.model.attack, horizon-alpha.field.grid horizon-alpha.field.grid, p horizon-alpha.player.player, a horizon-alpha.model.action, horizon-alpha.model.attack horizon-alpha.model.attack, path horizon-alpha.model.path, horizon-alpha.model.path horizon-alpha.model.path, grid horizon-alpha.field.grid, horizon-alpha.player.player horizon-alpha.player.player, horizon-alpha.model.heal horizon-alpha.model.heal, horizon-alpha.model.action horizon-alpha.model.action, horizon-alpha.field.field horizon-alpha.field.field, heal horizon-alpha.model.heal, f horizon-alpha.field.field}, :uses nil, :defs {hit-weakest {:protocol-inline nil, :meta {:file "/Users/bertranddechoux/Documents/sources/horizon-alpha/src/horizon_alpha/model/ai.cljs", :line 11, :column 7, :end-line 11, :end-column 18, :arglists (quote ([state player]))}, :name horizon-alpha.model.ai/hit-weakest, :variadic false, :file "src/horizon_alpha/model/ai.cljs", :end-column 18, :method-params ([state player]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 11, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state player]))}, escape-danger {:protocol-inline nil, :meta {:file "/Users/bertranddechoux/Documents/sources/horizon-alpha/src/horizon_alpha/model/ai.cljs", :line 17, :column 7, :end-line 17, :end-column 20, :arglists (quote ([state player]))}, :name horizon-alpha.model.ai/escape-danger, :variadic false, :file "src/horizon_alpha/model/ai.cljs", :end-column 20, :method-params ([state player]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 17, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state player]))}, heal-wounded {:protocol-inline nil, :meta {:file "/Users/bertranddechoux/Documents/sources/horizon-alpha/src/horizon_alpha/model/ai.cljs", :line 23, :column 7, :end-line 23, :end-column 19, :arglists (quote ([state player]))}, :name horizon-alpha.model.ai/heal-wounded, :variadic false, :file "src/horizon_alpha/model/ai.cljs", :end-column 19, :method-params ([state player]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 23, :end-line 23, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state player]))}, towards-fiend {:protocol-inline nil, :meta {:file "/Users/bertranddechoux/Documents/sources/horizon-alpha/src/horizon_alpha/model/ai.cljs", :line 28, :column 7, :end-line 28, :end-column 20, :arglists (quote ([state player]))}, :name horizon-alpha.model.ai/towards-fiend, :variadic false, :file "src/horizon_alpha/model/ai.cljs", :end-column 20, :method-params ([state player]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 28, :end-line 28, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state player]))}, around-fiend {:protocol-inline nil, :meta {:file "/Users/bertranddechoux/Documents/sources/horizon-alpha/src/horizon_alpha/model/ai.cljs", :line 38, :column 7, :end-line 38, :end-column 19, :arglists (quote ([state player]))}, :name horizon-alpha.model.ai/around-fiend, :variadic false, :file "src/horizon_alpha/model/ai.cljs", :end-column 19, :method-params ([state player]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 38, :end-line 38, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state player]))}, random-move {:protocol-inline nil, :meta {:file "/Users/bertranddechoux/Documents/sources/horizon-alpha/src/horizon_alpha/model/ai.cljs", :line 47, :column 7, :end-line 47, :end-column 18, :arglists (quote ([state player]))}, :name horizon-alpha.model.ai/random-move, :variadic false, :file "src/horizon_alpha/model/ai.cljs", :end-column 18, :method-params ([state player]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 47, :end-line 47, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state player]))}, ai {:protocol-inline nil, :meta {:file "/Users/bertranddechoux/Documents/sources/horizon-alpha/src/horizon_alpha/model/ai.cljs", :line 52, :column 7, :end-line 52, :end-column 9, :arglists (quote ([state]))}, :name horizon-alpha.model.ai/ai, :variadic false, :file "src/horizon_alpha/model/ai.cljs", :end-column 9, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 52, :end-line 52, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:pos :field :actions :active :players :heal :npc :attack}, :order [:attack :actions :pos :players :npc :heal :field :active]}, :doc "Action for any players."}