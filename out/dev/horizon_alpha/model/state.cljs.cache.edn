;; Analyzed by ClojureScript 1.7.122
{:use-macros nil, :excludes #{}, :name horizon-alpha.model.state, :imports nil, :requires {f horizon-alpha.field.field, horizon-alpha.field.field horizon-alpha.field.field, p horizon-alpha.player.player, horizon-alpha.player.player horizon-alpha.player.player, clojure.set clojure.set}, :uses {union clojure.set}, :defs {sync-occupied {:protocol-inline nil, :meta {:file "/Users/bertranddechoux/Documents/sources/horizon-alpha/src/horizon_alpha/model/state.cljs", :line 7, :column 7, :end-line 7, :end-column 20, :arglists (quote ([state]))}, :name horizon-alpha.model.state/sync-occupied, :variadic false, :file "src/horizon_alpha/model/state.cljs", :end-column 20, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, sync-active {:protocol-inline nil, :meta {:file "/Users/bertranddechoux/Documents/sources/horizon-alpha/src/horizon_alpha/model/state.cljs", :line 14, :column 7, :end-line 14, :end-column 18, :arglists (quote ([state]))}, :name horizon-alpha.model.state/sync-active, :variadic false, :file "src/horizon_alpha/model/state.cljs", :end-column 18, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, set-focus {:protocol-inline nil, :meta {:file "/Users/bertranddechoux/Documents/sources/horizon-alpha/src/horizon_alpha/model/state.cljs", :line 18, :column 7, :end-line 18, :end-column 16, :arglists (quote ([state pos]))}, :name horizon-alpha.model.state/set-focus, :variadic false, :file "src/horizon_alpha/model/state.cljs", :end-column 16, :method-params ([state pos]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 18, :end-line 18, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state pos]))}, set-targets {:protocol-inline nil, :meta {:file "/Users/bertranddechoux/Documents/sources/horizon-alpha/src/horizon_alpha/model/state.cljs", :line 21, :column 7, :end-line 21, :end-column 18, :arglists (quote ([state targets]))}, :name horizon-alpha.model.state/set-targets, :variadic false, :file "src/horizon_alpha/model/state.cljs", :end-column 18, :method-params ([state targets]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state targets]))}, gen-state {:protocol-inline nil, :meta {:file "/Users/bertranddechoux/Documents/sources/horizon-alpha/src/horizon_alpha/model/state.cljs", :line 24, :column 7, :end-line 24, :end-column 16, :arglists (quote ([]))}, :name horizon-alpha.model.state/gen-state, :variadic false, :file "src/horizon_alpha/model/state.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 24, :end-line 24, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, active-done {:protocol-inline nil, :meta {:file "/Users/bertranddechoux/Documents/sources/horizon-alpha/src/horizon_alpha/model/state.cljs", :line 31, :column 7, :end-line 31, :end-column 18, :arglists (quote ([state]))}, :name horizon-alpha.model.state/active-done, :variadic false, :file "src/horizon_alpha/model/state.cljs", :end-column 18, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 31, :end-line 31, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, sync-players {:protocol-inline nil, :meta {:file "/Users/bertranddechoux/Documents/sources/horizon-alpha/src/horizon_alpha/model/state.cljs", :line 34, :column 7, :end-line 34, :end-column 19, :arglists (quote ([state]))}, :name horizon-alpha.model.state/sync-players, :variadic false, :file "src/horizon_alpha/model/state.cljs", :end-column 19, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 34, :end-line 34, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, clean {:protocol-inline nil, :meta {:file "/Users/bertranddechoux/Documents/sources/horizon-alpha/src/horizon_alpha/model/state.cljs", :line 40, :column 7, :end-line 40, :end-column 12, :arglists (quote ([state]))}, :name horizon-alpha.model.state/clean, :variadic false, :file "src/horizon_alpha/model/state.cljs", :end-column 12, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 40, :end-line 40, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:pos :field :loots :targets :occupied :active :id :focus :players}, :order [:players :pos :occupied :active :id :focus :targets :field :loots]}, :doc "The complete state of the application."}