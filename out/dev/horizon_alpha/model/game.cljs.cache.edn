;; Analyzed by ClojureScript 1.7.122
{:use-macros nil, :excludes #{}, :name horizon-alpha.model.game, :imports nil, :requires {target horizon-alpha.model.target, horizon-alpha.model.ai horizon-alpha.model.ai, horizon-alpha.player.stat horizon-alpha.player.stat, p horizon-alpha.player.player, a horizon-alpha.model.action, ai horizon-alpha.model.ai, horizon-alpha.player.player horizon-alpha.player.player, horizon-alpha.model.action horizon-alpha.model.action, s horizon-alpha.player.stat, horizon-alpha.utils horizon-alpha.utils, horizon-alpha.i18n horizon-alpha.i18n, st horizon-alpha.model.state, horizon-alpha.model.state horizon-alpha.model.state, horizon-alpha.model.target horizon-alpha.model.target}, :uses {i18n horizon-alpha.i18n, later horizon-alpha.utils, and? horizon-alpha.utils, do-while-clock horizon-alpha.utils}, :defs {t {:name horizon-alpha.model.game/t, :file "src/horizon_alpha/model/game.cljs", :line 13, :column 1, :end-line 13, :end-column 7, :meta {:file "/Users/bertranddechoux/Documents/sources/horizon-alpha/src/horizon_alpha/model/game.cljs", :line 13, :column 6, :end-line 13, :end-column 7}}, start! {:protocol-inline nil, :meta {:file "/Users/bertranddechoux/Documents/sources/horizon-alpha/src/horizon_alpha/model/game.cljs", :line 57, :column 7, :end-line 57, :end-column 13, :arglists (quote ([state]))}, :name horizon-alpha.model.game/start!, :variadic false, :file "src/horizon_alpha/model/game.cljs", :end-column 13, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 57, :end-line 57, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, npc-end! {:protocol-inline nil, :meta {:file "/Users/bertranddechoux/Documents/sources/horizon-alpha/src/horizon_alpha/model/game.cljs", :line 17, :column 7, :end-line 17, :end-column 15, :arglists (quote ([state]))}, :name horizon-alpha.model.game/npc-end!, :variadic false, :file "src/horizon_alpha/model/game.cljs", :end-column 15, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 17, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, pc-end! {:protocol-inline nil, :meta {:file "/Users/bertranddechoux/Documents/sources/horizon-alpha/src/horizon_alpha/model/game.cljs", :line 25, :column 7, :end-line 25, :end-column 14, :arglists (quote ([state]))}, :name horizon-alpha.model.game/pc-end!, :variadic false, :file "src/horizon_alpha/model/game.cljs", :end-column 14, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 25, :end-line 25, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, pc-action! {:protocol-inline nil, :meta {:file "/Users/bertranddechoux/Documents/sources/horizon-alpha/src/horizon_alpha/model/game.cljs", :line 29, :column 7, :end-line 29, :end-column 17, :arglists (quote ([target state]))}, :name horizon-alpha.model.game/pc-action!, :variadic false, :file "src/horizon_alpha/model/game.cljs", :end-column 17, :method-params ([target state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 29, :end-line 29, :max-fixed-arity 2, :fn-var true, :arglists (quote ([target state]))}, step {:protocol-inline nil, :meta {:file "/Users/bertranddechoux/Documents/sources/horizon-alpha/src/horizon_alpha/model/game.cljs", :line 35, :column 7, :end-line 35, :end-column 11, :arglists (quote ([state]))}, :name horizon-alpha.model.game/step, :variadic false, :file "src/horizon_alpha/model/game.cljs", :end-column 11, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 35, :end-line 35, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, step! {:protocol-inline nil, :meta {:file "/Users/bertranddechoux/Documents/sources/horizon-alpha/src/horizon_alpha/model/game.cljs", :line 40, :column 7, :end-line 40, :end-column 12, :arglists (quote ([state]))}, :name horizon-alpha.model.game/step!, :variadic false, :file "src/horizon_alpha/model/game.cljs", :end-column 12, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 40, :end-line 40, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, continue?! {:protocol-inline nil, :meta {:file "/Users/bertranddechoux/Documents/sources/horizon-alpha/src/horizon_alpha/model/game.cljs", :line 44, :column 7, :end-line 44, :end-column 17, :arglists (quote ([state]))}, :name horizon-alpha.model.game/continue?!, :variadic false, :file "src/horizon_alpha/model/game.cljs", :end-column 17, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 44, :end-line 44, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, end! {:protocol-inline nil, :meta {:file "/Users/bertranddechoux/Documents/sources/horizon-alpha/src/horizon_alpha/model/game.cljs", :line 48, :column 7, :end-line 48, :end-column 11, :arglists (quote ([state]))}, :name horizon-alpha.model.game/end!, :variadic false, :file "src/horizon_alpha/model/game.cljs", :end-column 11, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 48, :end-line 48, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:sp :gaea :app/lose :type :pc :loots :active :players :npc :app/win}, :order [:players :loots :gaea :sp :active :type :app/win :app/lose :npc :pc]}, :doc "The management(!) of the state of the application."}