;; Analyzed by ClojureScript 1.7.122
{:use-macros nil, :excludes #{}, :name horizon-alpha.model.heal, :imports nil, :requires {s horizon-alpha.player.stat, horizon-alpha.player.stat horizon-alpha.player.stat}, :uses nil, :defs {heal-amount {:name horizon-alpha.model.heal/heal-amount, :file "src/horizon_alpha/model/heal.cljs", :line 5, :column 1, :end-line 5, :end-column 27, :private true, :meta {:file "/Users/bertranddechoux/Documents/sources/horizon-alpha/src/horizon_alpha/model/heal.cljs", :line 5, :column 16, :end-line 5, :end-column 27, :private true}}, normal-heal {:protocol-inline nil, :meta {:file "/Users/bertranddechoux/Documents/sources/horizon-alpha/src/horizon_alpha/model/heal.cljs", :line 7, :column 7, :end-line 7, :end-column 18, :arglists (quote ([state pos]))}, :name horizon-alpha.model.heal/normal-heal, :variadic false, :file "src/horizon_alpha/model/heal.cljs", :end-column 18, :method-params ([state pos]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state pos]))}, pc-heal {:protocol-inline nil, :meta {:file "/Users/bertranddechoux/Documents/sources/horizon-alpha/src/horizon_alpha/model/heal.cljs", :line 12, :column 7, :end-line 12, :end-column 14, :arglists (quote ([state id charge]))}, :name horizon-alpha.model.heal/pc-heal, :variadic false, :file "src/horizon_alpha/model/heal.cljs", :end-column 14, :method-params ([state id charge]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 3, :fn-var true, :arglists (quote ([state id charge]))}, npc-heal {:protocol-inline nil, :meta {:file "/Users/bertranddechoux/Documents/sources/horizon-alpha/src/horizon_alpha/model/heal.cljs", :line 20, :column 7, :end-line 20, :end-column 15, :arglists (quote ([state id]))}, :name horizon-alpha.model.heal/npc-heal, :variadic false, :file "src/horizon_alpha/model/heal.cljs", :end-column 15, :method-params ([state id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state id]))}, sparadrap-heal {:protocol-inline nil, :meta {:file "/Users/bertranddechoux/Documents/sources/horizon-alpha/src/horizon_alpha/model/heal.cljs", :line 28, :column 7, :end-line 28, :end-column 21, :arglists (quote ([state pos]))}, :name horizon-alpha.model.heal/sparadrap-heal, :variadic false, :file "src/horizon_alpha/model/heal.cljs", :end-column 21, :method-params ([state pos]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 28, :end-line 28, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state pos]))}, heal {:protocol-inline nil, :meta {:file "/Users/bertranddechoux/Documents/sources/horizon-alpha/src/horizon_alpha/model/heal.cljs", :line 36, :column 7, :end-line 36, :end-column 11, :arglists (quote ([state pos]))}, :name horizon-alpha.model.heal/heal, :variadic false, :file "src/horizon_alpha/model/heal.cljs", :end-column 11, :method-params ([state pos]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 36, :end-line 36, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state pos]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:sparadrap :sp :type :occupied :active :current :players :npc :hp}, :order [:occupied :players :hp :current :sparadrap :sp :npc :type :active]}, :doc "The heal action."}